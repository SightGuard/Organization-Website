---
interface Product {
	name: string;
	description: string;
	logoPath?: string;
	productUrl?: string;
}

interface Props {
	product: Product;
}

const { product } = Astro.props;

export type { Product };
---

<div class="card-container">
	<div class="card">
		<main>
			<h4>{product.name}</h4>
			<p>{product.description}</p>
		</main>
		<footer>
			<a href={product.productUrl} target="_blank">Read more â†’</a>
		</footer>
	</div>
	<div class="overlay">
		<img src={product.logoPath} height="100" width="100" />
		<h3>{product.name}</h3>
	</div>
</div>

<style>
	.card-container {
		@apply relative w-72 h-56 sm:w-80 sm:h-64 lg:w-96 lg:h-72 rounded-xl;
	}

	.card-container > div {
		@apply rounded-xl w-full h-full absolute top-0 left-0;
		@apply transition-opacity duration-300;
	}

	/* main content */

	h4,
	h3 {
		@apply text-lg sm:text-xl lg:text-2xl font-semibold;
	}

	h4 {
		@apply w-full border-b mb-2;
	}

	p {
		@apply text-sm sm:text-base lg:text-lg w-full;
	}

	a {
		@apply underline font-semibold;
	}

	/* 
	md and larger: hover over container to show the card
	smaller: overlay invisible => card always visible
	*/

	.card {
		@apply p-4 bg-gradient-to-br from-secondary via-secondary to-accent;
		@apply flex flex-col justify-between items-end;
		@apply lg:opacity-0;
	}

	.overlay {
		@apply invisible lg:visible;
		@apply -z-10 bg-primary border border-secondary;
		@apply flex flex-col justify-center items-center gap-2;
	}

	.card-container:hover .card {
		@apply opacity-100;
	}

	.card-container:hover .overlay {
		@apply opacity-0;
	}
</style>
